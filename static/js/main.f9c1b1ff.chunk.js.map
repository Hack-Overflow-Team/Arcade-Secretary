{"version":3,"sources":["Components/NavBar.js","Components/Start.js","Components/Score.js","Components/Intro.js","Components/GameTimer.js","Components/Finish.js","Components/Accuracy.js","Util/Time.js","Components/WordsPerMin.js","Pages/Home.js","Util/WordList.js","Pages/scoring_system.png","Pages/Rules.js","Pages/Contact.js","App.js","index.js"],"names":["NavBar","useState","click","setClick","closeBurgerMenu","className","to","src","class","onClick","Start","props","original","split","map","c","index","undefined","completed","Score","score","Intro","style","margin","setGameStart","GameTimer","gameTimer","Finish","console","log","accuracy","wordsPerMin","Accuracy","Time","Date","getTime","WordsPerMin","Home","wordList","useRef","Array","fill","faker","random","word","toLowerCase","generate","gameStart","setScore","rightLetters","setRightLetters","setAccuracy","typedCharsCount","setTypedCharsCount","startTime","setStartTime","wordCount","setWordCount","setWordsPerMin","initialCurrentWord","current","Math","floor","length","currentWord","setCurrentWord","setCompleted","setGameTimer","onKeyPress","e","typedChar","String","fromCharCode","keyCode","x","useEffect","currentTime","window","addEventListener","removeEventListener","toFixed","durationInMinutes","myInterval","setInterval","clearInterval","Rules","scoring_system","alt","Contact","color","href","App","basename","path","location","pathname","substr","lastIndexOf","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9c1b1ff.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\n\nfunction NavBar() {\n    const [click, setClick] = useState(false)\n    const handleClick = () => setClick(!click)\n    const closeBurgerMenu = () => setClick(false)\n\n    return (\n        <>\n        <nav className=\"navbar\">\n            <div className=\"navbar-container\">\n                <Link to='/' className=\"logo-section\">\n                 <img className=\"typewriter\" src=\"./images/typewriter.png\"/>\n                  ARCADE \n                 <i class=\"far fa-keyboard\"/> \n                </Link>\n                <div className='icon' onClick={handleClick}>\n                    <i className={click ? 'fab fa-gulp' : 'fas fa-hamburger'} />\n                </div>\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                    <li className='nav-item'>\n                        <Link to='/' className='nav-links' onClick={closeBurgerMenu}>\n                            HOME\n                        </Link>\n                    </li>\n                    <li className='nav-item'>\n                        <Link to='/Rules' className='nav-links' onClick={closeBurgerMenu}>\n                            RULES\n                        </Link>\n                    </li>\n                    <li className='nav-item'>\n                        <Link to='/Contact' className='nav-links' onClick={closeBurgerMenu}>\n                            CONTACT\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n        </>\n    )\n}\n\nexport default NavBar\n","import \"../App.css\";\nexport default function Start(props) {\n  return (\n    <p className=\"word\">\n      {props.original.split(\"\").map((c, index) => {\n        let className = \"\";\n        if (props.completed[index] === undefined) {\n          className = \"wait-char\";\n        } else if (props.completed[index] !== c) {\n          className = \"red\";\n        }\n        return (\n          <span key={index} className={className}>\n            {c}\n          </span>\n        );\n      })}\n    </p>\n  );\n}\n","import React from 'react'\n\nconst Score = (props) => {\n    return (\n        <div>\n            <p className=\"paragraph\">Score: {props.score}</p>\n        </div>\n    )\n}\n\nexport default Score\n","import '../App.css';\nexport default function Intro(props){\n    return(\n        <div className=\"App transparent\"  >\n        <p className=\"introTitle\">Type as fast as you can</p>\n        <button className=\"introButton\" style={{margin:\"3rem\"}}onClick={()=>{props.setGameStart(\"start\")}}>Play</button>\n        </div>\n    )\n}","export default function GameTimer(props){\n    return(\n        <h3>{props.gameTimer}</h3>\n    )\n}","import React from \"react\";\nimport \"../App.css\";\nexport default function Finish(props) {\n  console.log(\"from finish component\");\n  return (\n    <div>\n      <h1 className=\"heading\">Finish</h1>\n      <div className=\"container\">\n        <p className=\"paragraph\">Score: {props.score}</p>\n        <p className=\"paragraph\">Accuracy: {props.accuracy}%</p>\n        <p className=\"paragraph\">WMP: {props.wordsPerMin}</p>\n      </div>\n      <button\n        className=\"introButton\"\n        onClick={() => {\n          props.setGameStart(\"start\");\n        }}\n      >\n        Replay\n      </button>\n    </div>\n  );\n}\n","import React from 'react'\n\nconst Accuracy = (props) => {\n    return (\n        <>\n            <p className=\"paragraph\">Accuracy: {props.accuracy}</p>\n            \n        </>\n    )\n}\n\nexport default Accuracy\n","\n\nconst Time = () => {\n    let currentTime =  new Date().getTime();\n    return currentTime\n    \n}\n\nexport default Time\n","import React from 'react'\n\nconst WordsPerMin = (props) => {\n    return  <p className=\"paragraph\">WPM: {props.wordsPerMin}</p> \n}\n\nexport default WordsPerMin\n","import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport generate from \"../Util/WordList\";\nimport Start from \"../Components/Start\";\nimport Score from \"../Components/Score\";\nimport Intro from \"../Components/Intro\";\nimport GameTimer from \"../Components/GameTimer\";\nimport Finish from \"../Components/Finish\";\nimport Accuracy from \"../Components/Accuracy\";\nimport currentTime from \"../Util/Time\";\nimport WordsPerMin from \"../Components/WordsPerMin\";\n\nconst Home = () => {\n  const initialWordCount = 50;\n  const wordList = useRef(generate(initialWordCount));\n  const [gameStart, setGameStart] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [rightLetters, setRightLetters] = useState(0);\n  const [accuracy, setAccuracy] = useState(0);\n  const [typedCharsCount, setTypedCharsCount] = useState(0);\n  const [startTime, setStartTime] = useState(0);\n  const [wordCount, setWordCount] = useState(0);\n  const [wordsPerMin, setWordsPerMin] = useState(0);\n\n  // currentWord is a random word from wordList currently showing , and to be typed by the user\n  const initialCurrentWord =\n    wordList.current[Math.floor(Math.random() * wordList.current.length)];\n  const [currentWord, setCurrentWord] = useState(initialCurrentWord);\n\n  const [completed, setCompleted] = useState(\"\"); // letters of the currentWord typed so far by the user\n\n  const initialTimer = 10;\n  const [gameTimer, setGameTimer] = useState(initialTimer);\n\n  function onKeyPress(e) {\n    const typedChar = String.fromCharCode(e.keyCode);\n    setCompleted((completed) => `${completed}${typedChar}`);\n    setTypedCharsCount((x) => x + 1);\n  }\n\n  function resetGame() {\n    //set score and accuracy here\n    setWordsPerMin(0);\n    setWordCount(0);\n    setStartTime(currentTime());\n    setTypedCharsCount(0);\n    setRightLetters(0);\n    setScore(0);\n    setAccuracy(0);\n    setCompleted(\"\");\n    setCurrentWord(initialCurrentWord);\n  }\n  useEffect(() => {\n    if (gameStart === \"start\") {\n      resetGame();\n      console.log(\"Current Time\", currentTime());\n      setStartTime(currentTime());\n      window.addEventListener(\"keypress\", onKeyPress);\n      return () => window.removeEventListener(\"keypress\", onKeyPress);\n    }\n    console.log(\"gameStart\", gameStart);\n  }, [gameStart]);\n\n  function getNextWord() {\n    //to get random word from word list with an index ranging from 0 to wordList length-1\n    return wordList.current[\n      Math.floor(Math.random() * wordList.current.length)\n    ];\n  }\n\n  useEffect(() => {\n    console.log(\"Right Letters\", rightLetters);\n    console.log(\"Typed Chars Letters\", typedCharsCount);\n    setAccuracy(((rightLetters / typedCharsCount) * 100).toFixed(2));\n    const durationInMinutes = (currentTime() - startTime) / 60000.0;\n    setWordsPerMin((wordCount / durationInMinutes).toFixed(2));\n    console.log(\"WordCount\", wordCount);\n    console.log(\"WPM\", wordsPerMin);\n  }, [rightLetters, typedCharsCount]);\n\n  useEffect(() => {\n    //if completed is right and not empty i.e. there is some letters been typed into it\n    if (completed) {\n      //add the score calculating code here\n      if (\n        currentWord[completed.length - 1] === completed[completed.length - 1]\n      ) {\n        setScore((score) => score + 1);\n        setRightLetters((rightLetters) => rightLetters + 1);\n        console.log(\"score\", score);\n      } else {\n        if (\n          !currentWord[completed.length - 1] === completed[completed.length - 1]\n        ) {\n          setScore((score) => score - 1);\n          console.log(score);\n        }\n      }\n\n      //if completed(the letters typed)  reached the end of the current word\n      if (currentWord.length === completed.length) {\n        setCompleted(\"\");\n        setWordCount((wordCount) => wordCount + 1);\n        setCurrentWord(getNextWord());\n\n        //add the word counting code here\n      }\n    }\n  }, [completed]);\n\n  useEffect(() => {\n    // if game timer changed to \"start\", begin the count down\n    if (gameStart === \"start\") {\n      let myInterval = setInterval(() => {\n        if (gameTimer > 0) {\n          // console.log(\"game timer\",gameTimer)\n          setGameTimer(gameTimer - 1);\n        } else {\n          //if the timer finished clear the interval, to stop it from counting down\n          clearInterval(myInterval);\n          setGameStart(\"finish\");\n          setGameTimer(initialTimer);\n        }\n        return clearInterval(myInterval); //to clear interval when App component unmount\n      }, 1000);\n    }\n  }, [gameStart, gameTimer]);\n\n  return (\n    <div className=\"wrapper\">\n      {!gameStart && <Intro setGameStart={setGameStart} />}\n      {gameStart === \"start\" && (\n        <div className=\"container\">\n          <GameTimer gameTimer={gameTimer} />\n          <Start original={currentWord} completed={completed.toLowerCase()} />\n          <Accuracy accuracy={accuracy} />\n          <WordsPerMin wordsPerMin={wordsPerMin} />\n          <Score score={score} />\n          {/* <Input />\n            <Score/> */}\n        </div>\n      )}\n      {gameStart === \"finish\" && (\n        <Finish\n          setGameStart={setGameStart}\n          score={score}\n          accuracy={accuracy}\n          wordsPerMin={wordsPerMin}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import faker from \"faker\"\nexport default function generate(number=30){\n    return new Array(number)\n    .fill()\n    .map(() => faker.random.word().toLowerCase())\n}","export default __webpack_public_path__ + \"static/media/scoring_system.70c8aa7e.png\";","import React from \"react\";\nimport scoring_system from \"./scoring_system.png\";\nimport \"../App.css\";\n\nfunction Rules() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"heading\">RULES</h1>\n      <div className=\"container\">\n        <p className=\"paragraph\">\n          Arcade Secretary is a score-based speed typing game. Secretaries are\n          armed with their keyboards and lighting reflexes when they enter the\n          fast-paced corporate battlefield where speed and accuracy pave the way\n          to victory!\n        </p>\n\n        <p className=\"paragraph\">\n          Secretaries are given a strict deadline during which they will be\n          given words, which they must type and submit as quickly and as\n          accurately as super-humanly possible. Once the secretary finishes\n          typing a word, they must hit the space bar to submit their work before\n          the next word task can be provided.\n        </p>\n        <p className=\"paragraph\">\n          Secretaries will be awarded for accuracy and receive one point for\n          each character they typed correctly, but only up until their first\n          mistake! Mistakes are a liability. If a secretary makes a mistake,\n          they will accrue one negative point for the error and each remaining\n          word character.\n        </p>\n        <p className=\"paragraph\">\n          Secretaries race against time! Each word has a time limit. If time\n          runs out, the word will not be submitted and word length is deducted\n          from score. The battle moves to the next word. If the secretary\n          submits a word before the word timer runs out, the remaining time will\n          be added to extend their total allocated time. Secretaries race on\n          until the total game timer runs out and the game ends when they reach\n          their deadline.\n        </p>\n        <p className=\"paragraph\">\n          Secretaries are then provided with a performance review which will\n          include a positive or negative total score, total time, WPM (words per\n          minute), average accuracy and average time per character.\n        </p>\n        <p className=\"paragraph\">\n          Secretaries are immortal and live to battle again, always seeking to\n          improve and chasing deadline victories.\n        </p>\n      </div>\n\n      <img\n        className=\"scoring_system\"\n        src={scoring_system}\n        alt=\"Scoring System\"\n      />\n    </div>\n  );\n}\n\nexport default Rules;\n","import React from 'react'\n\nimport '../App.css';\n\nfunction Contact() {\n    return (\n        <div >\n            <h1 className=\"heading\">CONTACT</h1>\n                <div className=\"paragraph-container\">\n                    <div className=\"container\">\n\n                    <p className=\"paragraph\" style={{color: \"white\"}}>\n                        Arcade Secretary is brought to you by the very minds responsible for:\n                    </p>\n\n                    <p className=\"paragraph\">\n                        <a href=\"https://github.com/robaElshazly\">https://github.com/robaElshazly</a> \n                    </p> \n                    <p className=\"paragraph\">\n                        <a href=\"https://github.com/Ellezique\">https://github.com/Ellezique</a> \n                    </p> \n                    <p className=\"paragraph\">\n                        <a href=\"https://github.com/MrAjMann\">https://github.com/MrAjMann</a> \n                    </p>     \n                    </div>\n                </div>\n        </div>\n    )\n}\n\nexport default Contact\n","import React from 'react';\nimport NavBar from './Components/NavBar';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nimport Home from './Pages/Home';\nimport Rules from './Pages/Rules';\nimport Contact from './Pages/Contact';\n\nconst getBasename = path => path.substr(0, path.lastIndexOf('/'));\nconst App = () => {\n  return (\n    \n    <div className=\"App\" >\n      <>\n        <Router basename={getBasename(window.location.pathname)}>\n          <NavBar />\n          <Switch>\n            <div  >\n            <Route exact path='/' component={Home} />\n            <Route path='/Rules' component={Rules} />\n            <Route path='/Contact' component={Contact} />\n            </div>\n          </Switch>\n        </Router> \n      </>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}